{"version":3,"file":"rx-storage-statics.js","names":["RxStorageDefaultStatics","prepareQuery","schema","mutateableQuery","sort","newRxError","query","queryPlan","getQueryPlan","getSortComparator","preparedQuery","getDefaultSortComparator","getQueryMatcher","_schema","mingoQuery","getMingoQuery","selector","fun","doc","_deleted","cursor","find","next","checkpointSchema","DEFAULT_CHECKPOINT_SCHEMA","sortDirectionToMingo","direction","mingoSortObject","forEach","sortBlock","key","Object","keys","values","a","b","sorted","first"],"sources":["../../src/rx-storage-statics.ts"],"sourcesContent":["import type {\n    DeterministicSortComparator,\n    QueryMatcher\n} from 'event-reduce-js';\nimport type {\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageStatics,\n    FilledMangoQuery,\n    MangoQuery,\n    DefaultPreparedQuery\n} from './types';\nimport { newRxError } from './rx-error';\nimport { getQueryPlan } from './query-planner';\nimport { DEFAULT_CHECKPOINT_SCHEMA } from './rx-schema-helper';\nimport { getMingoQuery } from './rx-query-mingo';\n\n\n/**\n * Most RxStorage implementations use these static functions.\n * But you can use anything that implements the interface,\n * for example if your underlying database already has a query engine.\n */\nexport const RxStorageDefaultStatics: RxStorageStatics = {\n    prepareQuery<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        mutateableQuery: FilledMangoQuery<RxDocType>\n    ): DefaultPreparedQuery<RxDocType> {\n\n        if (!mutateableQuery.sort) {\n            throw newRxError('SNH', {\n                query: mutateableQuery\n            });\n        }\n\n        /**\n         * Store the query plan together with the\n         * prepared query to save performance.\n         */\n        const queryPlan = getQueryPlan(\n            schema,\n            mutateableQuery\n        );\n\n        return {\n            query: mutateableQuery,\n            queryPlan\n        };\n    },\n\n    getSortComparator<RxDocType>(\n        schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n        preparedQuery: DefaultPreparedQuery<RxDocType>\n    ): DeterministicSortComparator<RxDocType> {\n        return getDefaultSortComparator(schema, preparedQuery.query);\n    },\n\n    getQueryMatcher<RxDocType>(\n        _schema: RxJsonSchema<RxDocType>,\n        preparedQuery: DefaultPreparedQuery<RxDocType>\n    ): QueryMatcher<RxDocumentData<RxDocType>> {\n        const query = preparedQuery.query;\n        const mingoQuery = getMingoQuery(query.selector);\n        const fun: QueryMatcher<RxDocumentData<RxDocType>> = (doc: RxDocumentData<RxDocType>) => {\n            if (doc._deleted) {\n                return false;\n            }\n            const cursor = mingoQuery.find([doc]);\n            const next = cursor.next();\n            if (next) {\n                return true;\n            } else {\n                return false;\n            }\n        };\n        return fun;\n    },\n\n    checkpointSchema: DEFAULT_CHECKPOINT_SCHEMA\n\n};\n\nfunction sortDirectionToMingo(direction: 'asc' | 'desc'): 1 | -1 {\n    if (direction === 'asc') {\n        return 1;\n    } else {\n        return -1;\n    }\n}\n\n/**\n * This function is at dexie-helper\n * because we need it in multiple places.\n */\nexport function getDefaultSortComparator<RxDocType>(\n    _schema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    query: MangoQuery<RxDocType>\n): DeterministicSortComparator<RxDocType> {\n    const mingoSortObject: {\n        [fieldName: string]: 1 | -1;\n    } = {};\n\n    if (!query.sort) {\n        throw newRxError('SNH', { query });\n    }\n\n    query.sort.forEach(sortBlock => {\n        const key = Object.keys(sortBlock)[0];\n        const direction = Object.values(sortBlock)[0];\n        mingoSortObject[key] = sortDirectionToMingo(direction);\n    });\n\n    const fun: DeterministicSortComparator<RxDocType> = (a: RxDocType, b: RxDocType) => {\n        const sorted = getMingoQuery({}).find([a, b], {}).sort(mingoSortObject);\n        const first = sorted.next();\n        if (first === a) {\n            return -1;\n        } else {\n            return 1;\n        }\n    };\n\n    return fun;\n}\n"],"mappings":";;;;;;;AAYA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACO,IAAMA,uBAAyC,GAAG;EACrDC,YAAY,CACRC,MAA+C,EAC/CC,eAA4C,EACb;IAE/B,IAAI,CAACA,eAAe,CAACC,IAAI,EAAE;MACvB,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;QACpBC,KAAK,EAAEH;MACX,CAAC,CAAC;IACN;;IAEA;AACR;AACA;AACA;IACQ,IAAMI,SAAS,GAAG,IAAAC,0BAAY,EAC1BN,MAAM,EACNC,eAAe,CAClB;IAED,OAAO;MACHG,KAAK,EAAEH,eAAe;MACtBI;IACJ,CAAC;EACL,CAAC;EAEDE,iBAAiB,CACbP,MAA+C,EAC/CQ,aAA8C,EACR;IACtC,OAAOC,wBAAwB,CAACT,MAAM,EAAEQ,aAAa,CAACJ,KAAK,CAAC;EAChE,CAAC;EAEDM,eAAe,CACXC,OAAgC,EAChCH,aAA8C,EACP;IACvC,IAAMJ,KAAK,GAAGI,aAAa,CAACJ,KAAK;IACjC,IAAMQ,UAAU,GAAG,IAAAC,2BAAa,EAACT,KAAK,CAACU,QAAQ,CAAC;IAChD,IAAMC,GAA4C,GAAIC,GAA8B,IAAK;MACrF,IAAIA,GAAG,CAACC,QAAQ,EAAE;QACd,OAAO,KAAK;MAChB;MACA,IAAMC,MAAM,GAAGN,UAAU,CAACO,IAAI,CAAC,CAACH,GAAG,CAAC,CAAC;MACrC,IAAMI,IAAI,GAAGF,MAAM,CAACE,IAAI,EAAE;MAC1B,IAAIA,IAAI,EAAE;QACN,OAAO,IAAI;MACf,CAAC,MAAM;QACH,OAAO,KAAK;MAChB;IACJ,CAAC;IACD,OAAOL,GAAG;EACd,CAAC;EAEDM,gBAAgB,EAAEC;AAEtB,CAAC;AAAC;AAEF,SAASC,oBAAoB,CAACC,SAAyB,EAAU;EAC7D,IAAIA,SAAS,KAAK,KAAK,EAAE;IACrB,OAAO,CAAC;EACZ,CAAC,MAAM;IACH,OAAO,CAAC,CAAC;EACb;AACJ;;AAEA;AACA;AACA;AACA;AACO,SAASf,wBAAwB,CACpCE,OAAgD,EAChDP,KAA4B,EACU;EACtC,IAAMqB,eAEL,GAAG,CAAC,CAAC;EAEN,IAAI,CAACrB,KAAK,CAACF,IAAI,EAAE;IACb,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MAAEC;IAAM,CAAC,CAAC;EACtC;EAEAA,KAAK,CAACF,IAAI,CAACwB,OAAO,CAACC,SAAS,IAAI;IAC5B,IAAMC,GAAG,GAAGC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;IACrC,IAAMH,SAAS,GAAGK,MAAM,CAACE,MAAM,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7CF,eAAe,CAACG,GAAG,CAAC,GAAGL,oBAAoB,CAACC,SAAS,CAAC;EAC1D,CAAC,CAAC;EAEF,IAAMT,GAA2C,GAAG,CAACiB,CAAY,EAAEC,CAAY,KAAK;IAChF,IAAMC,MAAM,GAAG,IAAArB,2BAAa,EAAC,CAAC,CAAC,CAAC,CAACM,IAAI,CAAC,CAACa,CAAC,EAAEC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC/B,IAAI,CAACuB,eAAe,CAAC;IACvE,IAAMU,KAAK,GAAGD,MAAM,CAACd,IAAI,EAAE;IAC3B,IAAIe,KAAK,KAAKH,CAAC,EAAE;MACb,OAAO,CAAC,CAAC;IACb,CAAC,MAAM;MACH,OAAO,CAAC;IACZ;EACJ,CAAC;EAED,OAAOjB,GAAG;AACd"}