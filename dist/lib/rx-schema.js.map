{"version":3,"file":"rx-schema.js","names":["RxSchema","jsonSchema","indexes","getIndexes","primaryPath","getPrimaryFieldOfPrimaryKey","primaryKey","finalFields","getFinalFields","validateChange","dataBefore","dataAfter","forEach","fieldName","deepEqual","newRxError","schema","fillObjectWithDefaults","obj","flatClone","Object","entries","defaultValues","filter","k","hasOwnProperty","v","getDocumentPrototype","proto","defineGetterSetter","overwriteGetterForCaching","getPrimaryOfDocumentData","documentData","getComposedPrimaryKeyOfDocumentData","version","values","properties","default","fastUnsecureHash","JSON","stringify","map","index","isMaybeReadonlyArray","getPreviousVersions","c","Array","fill","createRxSchema","runPreCreateHooks","runPluginHooks","useJsonSchema","fillWithDefaultSettings","normalizeRxJsonSchema","overwritable","deepFreezeWhenDevMode","isRxSchema","toTypedRxJsonSchema"],"sources":["../../src/rx-schema.ts"],"sourcesContent":["import {\n    overwriteGetterForCaching,\n    flatClone,\n    isMaybeReadonlyArray,\n    fastUnsecureHash,\n    deepEqual\n} from './plugins/utils';\nimport {\n    newRxError,\n} from './rx-error';\nimport {\n    runPluginHooks\n} from './hooks';\nimport {\n    defineGetterSetter\n} from './rx-document';\n\nimport type {\n    DeepMutable,\n    DeepReadonly, MaybeReadonly,\n    RxDocumentData,\n    RxJsonSchema,\n    StringKeys\n} from './types';\nimport {\n    fillWithDefaultSettings,\n    getComposedPrimaryKeyOfDocumentData,\n    getFinalFields,\n    getPrimaryFieldOfPrimaryKey,\n    normalizeRxJsonSchema\n} from './rx-schema-helper';\nimport { overwritable } from './overwritable';\n\nexport class RxSchema<RxDocType = any> {\n    public indexes: MaybeReadonly<string[]>[];\n    public readonly primaryPath: StringKeys<RxDocumentData<RxDocType>>;\n    public finalFields: string[];\n\n    constructor(\n        public readonly jsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>\n    ) {\n        this.indexes = getIndexes(this.jsonSchema);\n\n        // primary is always required\n        this.primaryPath = getPrimaryFieldOfPrimaryKey(this.jsonSchema.primaryKey);\n\n        this.finalFields = getFinalFields(this.jsonSchema);\n    }\n\n    public get version(): number {\n        return this.jsonSchema.version;\n    }\n\n    public get defaultValues(): { [P in keyof RxDocType]: RxDocType[P] } {\n        const values = {} as { [P in keyof RxDocType]: RxDocType[P] };\n        Object\n            .entries(this.jsonSchema.properties)\n            .filter(([, v]) => (v as any).hasOwnProperty('default'))\n            .forEach(([k, v]) => (values as any)[k] = (v as any).default);\n        return overwriteGetterForCaching(\n            this,\n            'defaultValues',\n            values\n        );\n    }\n\n    /**\n     * @overrides itself on the first call\n     */\n    public get hash(): string {\n        return overwriteGetterForCaching(\n            this,\n            'hash',\n            fastUnsecureHash(JSON.stringify(this.jsonSchema))\n        );\n    }\n\n    /**\n     * checks if a given change on a document is allowed\n     * Ensures that:\n     * - final fields are not modified\n     * @throws {Error} if not valid\n     */\n    validateChange(dataBefore: any, dataAfter: any): void {\n        this.finalFields.forEach(fieldName => {\n            if (!deepEqual(dataBefore[fieldName], dataAfter[fieldName])) {\n                throw newRxError('DOC9', {\n                    dataBefore,\n                    dataAfter,\n                    fieldName,\n                    schema: this.jsonSchema\n                });\n            }\n        });\n    }\n\n    /**\n     * fills all unset fields with default-values if set\n     */\n    fillObjectWithDefaults(obj: any): any {\n        obj = flatClone(obj);\n        Object\n            .entries(this.defaultValues)\n            .filter(([k]) => !obj.hasOwnProperty(k) || typeof obj[k] === 'undefined')\n            .forEach(([k, v]) => obj[k] = v);\n        return obj;\n    }\n\n    /**\n     * creates the schema-based document-prototype,\n     * see RxCollection.getDocumentPrototype()\n     */\n    public getDocumentPrototype(): any {\n        const proto = {};\n        defineGetterSetter(this, proto, '');\n        overwriteGetterForCaching(\n            this,\n            'getDocumentPrototype',\n            () => proto\n        );\n        return proto;\n    }\n\n\n    getPrimaryOfDocumentData(\n        documentData: Partial<RxDocType>\n    ): string {\n        return getComposedPrimaryKeyOfDocumentData(\n            this.jsonSchema,\n            documentData\n        );\n    }\n}\n\nexport function getIndexes<RxDocType = any>(\n    jsonSchema: RxJsonSchema<RxDocType>\n): MaybeReadonly<string[]>[] {\n    return (jsonSchema.indexes || []).map(index => isMaybeReadonlyArray(index) ? index : [index]);\n}\n\n/**\n * array with previous version-numbers\n */\nexport function getPreviousVersions(schema: RxJsonSchema<any>): number[] {\n    const version = schema.version ? schema.version : 0;\n    let c = 0;\n    return new Array(version)\n        .fill(0)\n        .map(() => c++);\n}\n\nexport function createRxSchema<T>(\n    jsonSchema: RxJsonSchema<T>,\n    runPreCreateHooks = true\n): RxSchema<T> {\n    if (runPreCreateHooks) {\n        runPluginHooks('preCreateRxSchema', jsonSchema);\n    }\n\n    let useJsonSchema = fillWithDefaultSettings(jsonSchema);\n    useJsonSchema = normalizeRxJsonSchema(useJsonSchema);\n    overwritable.deepFreezeWhenDevMode(useJsonSchema);\n\n    const schema = new RxSchema(useJsonSchema);\n    runPluginHooks('createRxSchema', schema);\n    return schema;\n}\n\nexport function isRxSchema(obj: any): boolean {\n    return obj instanceof RxSchema;\n}\n\n/**\n * Used as helper function the generate the document type out of the schema via typescript.\n * @link https://github.com/pubkey/rxdb/discussions/3467\n */\nexport function toTypedRxJsonSchema<T extends DeepReadonly<RxJsonSchema<any>>>(schema: T): DeepMutable<T> {\n    return schema as any;\n}\n"],"mappings":"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"}