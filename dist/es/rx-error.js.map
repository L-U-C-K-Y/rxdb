{"version":3,"file":"rx-error.js","names":["overwritable","parametersToString","parameters","ret","Object","keys","length","map","k","paramStr","JSON","stringify","_k","v","undefined","e","join","messageForError","message","code","RxError","mes","rxdb","toString","Error","RxTypeError","TypeError","newRxError","tunnelErrorMessage","newRxTypeError","isBulkWriteConflictError","err","status","STORAGE_WRITE_ERROR_CODE_TO_MESSAGE","rxStorageWriteErrorToRxError","name","document","documentId","writeError"],"sources":["../../src/rx-error.ts"],"sourcesContent":["/**\n * here we use custom errors with the additional field 'parameters'\n */\n\nimport { overwritable } from './overwritable';\nimport type {\n    RxErrorParameters,\n    RxErrorKey,\n    RxStorageWriteError,\n    RxStorageWriteErrorConflict\n} from './types';\n\n/**\n * transform an object of parameters to a presentable string\n */\nfunction parametersToString(parameters: any): string {\n    let ret = '';\n    if (Object.keys(parameters).length === 0)\n        return ret;\n    ret += 'Given parameters: {\\n';\n    ret += Object.keys(parameters)\n        .map(k => {\n            let paramStr = '[object Object]';\n            try {\n                paramStr = JSON.stringify(\n                    parameters[k],\n                    (_k, v) => v === undefined ? null : v,\n                    2\n                );\n            } catch (e) { }\n            return k + ':' + paramStr;\n        })\n        .join('\\n');\n    ret += '}';\n    return ret;\n}\n\nfunction messageForError(\n    message: string,\n    code: string,\n    parameters: any\n): string {\n    return 'RxError (' + code + '):' + '\\n' +\n        message + '\\n' +\n        parametersToString(parameters);\n}\n\nexport class RxError extends Error {\n    public code: RxErrorKey;\n    public message: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return false;\n    }\n}\n\nexport class RxTypeError extends TypeError {\n    public code: RxErrorKey;\n    public message: string;\n    public parameters: RxErrorParameters;\n    // always true, use this to detect if its an rxdb-error\n    public rxdb: true;\n    constructor(\n        code: RxErrorKey,\n        message: string,\n        parameters: RxErrorParameters = {}\n    ) {\n        const mes = messageForError(message, code, parameters);\n        super(mes);\n        this.code = code;\n        this.message = mes;\n        this.parameters = parameters;\n        this.rxdb = true; // tag them as internal\n    }\n    get name(): string {\n        return 'RxTypeError (' + this.code + ')';\n    }\n    toString(): string {\n        return this.message;\n    }\n    get typeError(): boolean {\n        return true;\n    }\n}\n\nexport function newRxError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxError {\n    return new RxError(\n        code,\n        overwritable.tunnelErrorMessage(code),\n        parameters\n    );\n}\n\nexport function newRxTypeError(\n    code: RxErrorKey,\n    parameters?: RxErrorParameters\n): RxTypeError {\n    return new RxTypeError(\n        code,\n        overwritable.tunnelErrorMessage(code),\n        parameters\n    );\n}\n\n\n/**\n * Returns the error if it is a 409 conflict,\n * return false if it is another error.\n */\nexport function isBulkWriteConflictError<RxDocType>(\n    err?: RxStorageWriteError<RxDocType> | any\n): RxStorageWriteErrorConflict<RxDocType> | false {\n    if (\n        err &&\n        err.status === 409\n    ) {\n        return err;\n    } else {\n        return false;\n    }\n}\n\n\nconst STORAGE_WRITE_ERROR_CODE_TO_MESSAGE: { [k: number]: string; } = {\n    409: 'document write conflict',\n    422: 'schema validation error',\n    510: 'attachment data missing'\n};\n\nexport function rxStorageWriteErrorToRxError(err: RxStorageWriteError<any>): RxError {\n    return newRxError('COL20', {\n        name: STORAGE_WRITE_ERROR_CODE_TO_MESSAGE[err.status],\n        document: err.documentId,\n        writeError: err\n    });\n}\n"],"mappings":"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"}