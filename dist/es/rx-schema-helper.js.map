{"version":3,"file":"rx-schema-helper.js","names":["newRxError","flatClone","getProperty","isMaybeReadonlyArray","RX_META_LWT_MINIMUM","sortObject","trimDots","getPseudoSchemaForVersion","version","primaryKey","pseudoSchema","fillWithDefaultSettings","type","properties","maxLength","required","getSchemaByObjectPath","rxJsonSchema","path","usePath","replace","ret","fillPrimaryKey","primaryPath","jsonSchema","documentData","cloned","newPrimary","getComposedPrimaryKeyOfDocumentData","existingPrimary","args","schema","getPrimaryFieldOfPrimaryKey","key","compositePrimary","fields","map","field","value","join","separator","normalizeRxJsonSchema","normalizedSchema","schemaObj","additionalProperties","hasOwnProperty","keyCompression","indexes","slice","encrypted","_rev","minLength","_attachments","_deleted","_meta","RX_META_SCHEMA","push","finalFields","getFinalFields","concat","filter","includes","elem","pos","arr","indexOf","index","arIndex","modifiedIndex","lwt","minimum","maximum","multipleOf","Object","keys","final","forEach","DEFAULT_CHECKPOINT_SCHEMA","id"],"sources":["../../src/rx-schema-helper.ts"],"sourcesContent":["import { newRxError } from './rx-error';\nimport type {\n    CompositePrimaryKey,\n    DeepReadonly,\n    JsonSchema,\n    PrimaryKey,\n    RxDocumentData,\n    RxJsonSchema,\n    RxStorageDefaultCheckpoint,\n    StringKeys\n} from './types';\nimport {\n    flatClone,\n    getProperty,\n    isMaybeReadonlyArray,\n    RX_META_LWT_MINIMUM,\n    sortObject,\n    trimDots\n} from './plugins/utils';\n\n/**\n * Helper function to create a valid RxJsonSchema\n * with a given version.\n */\nexport function getPseudoSchemaForVersion<T = any>(\n    version: number,\n    primaryKey: StringKeys<T>\n): RxJsonSchema<RxDocumentData<T>> {\n    const pseudoSchema: RxJsonSchema<RxDocumentData<T>> = fillWithDefaultSettings({\n        version,\n        type: 'object',\n        primaryKey: primaryKey as any,\n        properties: {\n            [primaryKey]: {\n                type: 'string',\n                maxLength: 100\n            }\n        } as any,\n        required: [primaryKey]\n    });\n    return pseudoSchema;\n}\n\n/**\n * Returns the sub-schema for a given path\n */\nexport function getSchemaByObjectPath<T = any>(\n    rxJsonSchema: RxJsonSchema<T>,\n    path: keyof T | string\n): JsonSchema {\n    let usePath: string = path as string;\n    usePath = usePath.replace(/\\./g, '.properties.');\n    usePath = 'properties.' + usePath;\n    usePath = trimDots(usePath);\n\n    const ret = getProperty(rxJsonSchema, usePath);\n    return ret;\n}\n\nexport function fillPrimaryKey<T>(\n    primaryPath: keyof T,\n    jsonSchema: RxJsonSchema<T>,\n    documentData: RxDocumentData<T>\n): RxDocumentData<T> {\n    const cloned = flatClone(documentData);\n    const newPrimary = getComposedPrimaryKeyOfDocumentData<T>(\n        jsonSchema,\n        documentData\n    );\n    const existingPrimary: string | undefined = documentData[primaryPath] as any;\n    if (\n        existingPrimary &&\n        existingPrimary !== newPrimary\n    ) {\n        throw newRxError(\n            'DOC19',\n            {\n                args: {\n                    documentData,\n                    existingPrimary,\n                    newPrimary,\n                },\n                schema: jsonSchema\n            });\n    }\n\n    (cloned as any)[primaryPath] = newPrimary;\n    return cloned;\n}\n\nexport function getPrimaryFieldOfPrimaryKey<RxDocType>(\n    primaryKey: PrimaryKey<RxDocType>\n): StringKeys<RxDocType> {\n    if (typeof primaryKey === 'string') {\n        return primaryKey as any;\n    } else {\n        return (primaryKey as CompositePrimaryKey<RxDocType>).key;\n    }\n}\n\n/**\n * Returns the composed primaryKey of a document by its data.\n */\nexport function getComposedPrimaryKeyOfDocumentData<RxDocType>(\n    jsonSchema: RxJsonSchema<RxDocType> | RxJsonSchema<RxDocumentData<RxDocType>>,\n    documentData: Partial<RxDocType>\n): string {\n    if (typeof jsonSchema.primaryKey === 'string') {\n        return (documentData as any)[jsonSchema.primaryKey];\n    }\n\n    const compositePrimary: CompositePrimaryKey<RxDocType> = jsonSchema.primaryKey as any;\n    return compositePrimary.fields.map(field => {\n        const value = getProperty(documentData as any, field as string);\n        if (typeof value === 'undefined') {\n            throw newRxError('DOC18', { args: { field, documentData } });\n        }\n        return value;\n    }).join(compositePrimary.separator);\n}\n\n\n/**\n * Normalize the RxJsonSchema.\n * We need this to ensure everything is set up properly\n * and we have the same hash on schemas that represent the same value but\n * have different json.\n *\n * - Orders the schemas attributes by alphabetical order\n * - Adds the primaryKey to all indexes that do not contain the primaryKey\n * - We need this for deterministic sort order on all queries, which is required for event-reduce to work.\n *\n * @return RxJsonSchema - ordered and filled\n */\nexport function normalizeRxJsonSchema<T>(jsonSchema: RxJsonSchema<T>): RxJsonSchema<T> {\n    const normalizedSchema: RxJsonSchema<T> = sortObject(jsonSchema, true);\n    return normalizedSchema;\n}\n\n/**\n * fills the schema-json with default-settings\n * @return cloned schemaObj\n */\nexport function fillWithDefaultSettings<T = any>(\n    schemaObj: RxJsonSchema<T>\n): RxJsonSchema<RxDocumentData<T>> {\n    schemaObj = flatClone(schemaObj);\n    const primaryPath: string = getPrimaryFieldOfPrimaryKey(schemaObj.primaryKey);\n    schemaObj.properties = flatClone(schemaObj.properties);\n\n    // additionalProperties is always false\n    schemaObj.additionalProperties = false;\n\n    // fill with key-compression-state ()\n    if (!schemaObj.hasOwnProperty('keyCompression')) {\n        schemaObj.keyCompression = false;\n    }\n\n    // indexes must be array\n    schemaObj.indexes = schemaObj.indexes ? schemaObj.indexes.slice(0) : [];\n\n    // required must be array\n    schemaObj.required = schemaObj.required ? schemaObj.required.slice(0) : [];\n\n    // encrypted must be array\n    schemaObj.encrypted = schemaObj.encrypted ? schemaObj.encrypted.slice(0) : [];\n\n    // add _rev\n    (schemaObj.properties as any)._rev = {\n        type: 'string',\n        minLength: 1\n    };\n\n    // add attachments\n    (schemaObj.properties as any)._attachments = {\n        type: 'object'\n    };\n\n    // add deleted flag\n    (schemaObj.properties as any)._deleted = {\n        type: 'boolean'\n    };\n\n    // add meta property\n    (schemaObj.properties as any)._meta = RX_META_SCHEMA;\n\n    /**\n     * meta fields are all required\n     */\n    schemaObj.required = schemaObj.required ? schemaObj.required.slice(0) : [];\n    (schemaObj.required as string[]).push('_deleted');\n    (schemaObj.required as string[]).push('_rev');\n    (schemaObj.required as string[]).push('_meta');\n    (schemaObj.required as string[]).push('_attachments');\n\n    // final fields are always required\n    const finalFields = getFinalFields(schemaObj);\n    schemaObj.required = schemaObj.required\n        .concat(finalFields as any)\n        .filter((field: string) => !field.includes('.'))\n        .filter((elem: any, pos: any, arr: any) => arr.indexOf(elem) === pos); // unique;\n\n    // version is 0 by default\n    schemaObj.version = schemaObj.version || 0;\n\n    /**\n     * Append primary key to indexes that do not contain the primaryKey.\n     * All indexes must have the primaryKey to ensure a deterministic sort order.\n     */\n    if (schemaObj.indexes) {\n        schemaObj.indexes = schemaObj.indexes.map(index => {\n            const arIndex = isMaybeReadonlyArray(index) ? index.slice(0) : [index];\n            if (!arIndex.includes(primaryPath)) {\n                const modifiedIndex = arIndex.slice(0);\n                modifiedIndex.push(primaryPath);\n                return modifiedIndex;\n            }\n            return arIndex;\n        });\n    }\n\n    return schemaObj as any;\n}\n\n\nexport const RX_META_SCHEMA: JsonSchema = {\n    type: 'object',\n    properties: {\n        /**\n         * The last-write time.\n         * Unix time in milliseconds.\n         */\n        lwt: {\n            type: 'number',\n            /**\n             * We use 1 as minimum so that the value is never falsy.\n             */\n            minimum: RX_META_LWT_MINIMUM,\n            maximum: 1000000000000000,\n            multipleOf: 0.01\n        }\n    },\n    /**\n     * Additional properties are allowed\n     * and can be used by plugins to set various flags.\n     */\n    additionalProperties: true as any,\n    required: [\n        'lwt'\n    ]\n};\n\n\n/**\n * returns the final-fields of the schema\n * @return field-names of the final-fields\n */\nexport function getFinalFields<T = any>(\n    jsonSchema: RxJsonSchema<T>\n): string[] {\n    const ret = Object.keys(jsonSchema.properties)\n        .filter(key => (jsonSchema as any).properties[key].final);\n\n    // primary is also final\n    const primaryPath = getPrimaryFieldOfPrimaryKey(jsonSchema.primaryKey);\n    ret.push(primaryPath);\n\n    // fields of composite primary are final\n    if (typeof jsonSchema.primaryKey !== 'string') {\n        (jsonSchema.primaryKey as CompositePrimaryKey<T>).fields\n            .forEach(field => ret.push(field as string));\n    }\n\n    return ret;\n}\n\n\nexport const DEFAULT_CHECKPOINT_SCHEMA: DeepReadonly<JsonSchema<RxStorageDefaultCheckpoint>> = {\n    type: 'object',\n    properties: {\n        id: {\n            type: 'string'\n        },\n        lwt: {\n            type: 'number'\n        }\n    },\n    required: [\n        'id',\n        'lwt'\n    ],\n    additionalProperties: false\n} as const;\n"],"mappings":"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"}